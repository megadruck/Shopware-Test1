//{namespace name="backend/viison_shipping_common_shipping/shipping"}
Ext.define("Shopware.apps.ViisonShippingCommonShipping.controller.Tab",{ extend:"Ext.app.Controller",snippets:{ notifications:{ createMappingSuccess:{ title:'{s name=default_form/notifications/create_mapping_success/title}{/s}',message:'{s name=default_form/notifications/create_mapping_success/message}{/s}'},createMappingError:{ title:'{s name=default_form/notifications/create_mapping_error/title}{/s}',message:'{s name=default_form/notifications/create_mapping_error/message}{/s}'},updateMappingSuccess:{ title:'{s name=default_form/notifications/update_mapping_success/title}{/s}',message:'{s name=default_form/notifications/update_mapping_success/message}{/s}'},updateMappingError:{ title:'{s name=default_form/notifications/update_mapping_error/title}{/s}',message:'{s name=default_form/notifications/update_mapping_error/message}{/s}'},destroyMappingSuccess:{ title:'{s name=default_form/notifications/destroy_mapping_success/title}{/s}',message:'{s name=default_form/notifications/destroy_mapping_success/message}{/s}'},destroyMappingError:{ title:'{s name=default_form/notifications/destroy_mapping_error/title}{/s}',message:'{s name=default_form/notifications/destroy_mapping_error/message}{/s}'},growlMessage:'{s name=default_form/notifications/growlMessage}{/s}'}},constructor:function(){ this.refs=(this.refs||[]).concat([{ ref:"tab",selector:this.tabAlias}]);this.productStore=Ext.create(this.productStoreClass).load();this.productMappingStore=Ext.create(this.productMappingStoreClass);this.callParent(arguments)},init:function(){ var i=this;i.control({ "button[action=saveDispatch]":{ click:i.onDispatchSaveMapping}});i.getStore("Dispatch").on({ load:{ fn:i.onDispatchStoreLoaded,scope:i}});i.callParent(arguments)},onDispatchSaveMapping:function(i,e){ var t=this;var a=i.up("window").down("form").getForm().getRecord();if(a.get("clone")){ a.on("idchanged",function(i,e,a,p){ if(a){ t.getTab().mappingForm.productMapping=undefined;t.crudMapping(i)}})}else if(!a.get("clone")&&a.phantom){ t.oldRecordIds=[];var p=t.getStore("Dispatch").getRange();Ext.each(p,function(i){ t.oldRecordIds.push(i.data.id)});t.getTab().mappingForm.productMapping=undefined}else{ t.crudMapping(a)}},crudMapping:function(i){ var e=this;var t=e.getTab();var a=t.mappingForm.getForm().getFieldValues();var p=false;Ext.iterate(a,function(i,e){ if(e){ p=true}});var c=t.mappingForm.productMapping;if(c===undefined&&!p){ return}else if(c===undefined&&p){ c=Ext.create(e.productMappingModelClass,Ext.apply({ productId:a.product,dispatchId:i.data.id},a))}else{ c.set("productId",a.product);Ext.iterate(a,function(i,e){ if(i!="product"){ c.set(i,e)}})}c.save({ callback:function(i,a){ var p=e.snippets.notifications.updateMappingSuccess;if(a.success===true){ if(a.action==="create"){ p=e.snippets.notifications.createMappingSuccess;t.productMappingStore.add(c);t.mappingForm.productMapping=c}}else{ p=a.action==="create"?e.snippets.notifications.createMappingError:e.snippets.notifications.updateMappingError}Shopware.Notification.createGrowlMessage(e.fillSnippet(p.title),e.fillSnippet(p.message),e.snippets.notifications.growlMessage)}})},onDispatchStoreLoaded:function(i,e,t,a){ var p=a.scope;if(!t||p.oldRecordIds===undefined){ return}var c;Ext.each(e,function(i){ if(p.oldRecordIds.indexOf(i.data.id)==-1){ c=i;return false}});if(c===undefined){ return}p.crudMapping(c);p.oldRecordIds=undefined},onDispatchDeleteMapping:function(i){ var e=this;if(i!==undefined&&i.data.id!=0){ var t=e.productMappingStore.find("dispatchId",i.data.id);var a;if(t>-1){ a=e.productMappingStore.getAt(t)}else{ a=Ext.create(e.productMappingModelClass);a.set("dispatchId",i.data.id)}e.deleteMapping(a)}},createEditForm:function(i){ this.productMappingStore.getProxy().extraParams={ dispatchId:i.internalId}},deleteMapping:function(i){ var e=this;i.destroy({ callback:function(t,a){ var p=e.snippets.notifications.destroyMappingError;if(a.success){ p=e.snippets.notifications.destroyMappingSuccess;e.productMappingStore.remove(i);if(e.getTab()){ delete e.getTab().mappingForm.productMapping}}Shopware.Notification.createGrowlMessage(e.fillSnippet(p.title),e.fillSnippet(p.message),e.snippets.notifications.growlMessage)}})},fillSnippet:function(i){ return Ext.String.format(i,this.dispatchServiceProviderName)}});
